version: "3.3"
services:
    redis:
        container_name: ${APP_NAME}-redis
        image: "redis:latest"
        ports:  # WARNING: use 'expose' instead of 'ports' when on production
            - "${REDIS_PORT}:6379"
        volumes:
            - "${PWD}/../volumes/redis:/data"
        command: redis-server --appendonly yes
        healthcheck:
            test: exit 0
    mongodb:
        container_name: ${APP_NAME}-mongodb
        image: "mongo:latest"
        ports:  # WARNING: use 'expose' instead of 'ports' when on production
            - "${MONGO_PORT}:27017"
        volumes:
            - "mongodata:/data/db"
        healthcheck:
            test: exit 0
    mysql:
        container_name: ${APP_NAME}-mysql
        image: "mysql:latest"
        ports:  # WARNING: use 'expose' instead of 'ports' when on production
            - "${MYSQL_PORT}:3306"
        environment:
            MYSQL_RANDOM_ROOT_PASSWORD: "yes"
            MYSQL_USER: ${MYSQL_USER}
            MYSQL_PASSWORD: ${MYSQL_PASSWORD}
            MYSQL_DATABASE: ${MYSQL_DATABASE}
        volumes:
            - "${PWD}/../volumes/mysql:/var/lib/mysql"
        healthcheck:
            test: exit 0
    api:
        container_name: ${APP_NAME}-api
        build:
            context: ../
            args:
                - NODE_ENV=${NODE_ENV}
        image: "${APP_NAME}"
        restart: on-failure
        environment:
            - NODE_ENV=${NODE_ENV}
            - APP_PORT=${APP_PORT}
            - MONGO_URL=mongodb://mongodb:27017/${MONGO_DB}
            - REDIS_URL=redis://redis:6379
            - MYSQL_URL=mysql://${MYSQL_USER}:${MYSQL_PASSWORD}@mysql:3306/${MYSQL_DATABASE}    # Don't specify user as 'root' because this user is always available by default
        volumes:
            - "${PWD}/../public:/app/public"
            - "${PWD}/../logs:/app/logs"
        ports:
            - "${APP_PORT}:${APP_PORT}"
        depends_on:
            - redis
            - mongodb
            - mysql
        links:
            - redis
            - mongodb
            - mysql
        healthcheck:
            test: npm test || exit 0
volumes:
    mongodata: